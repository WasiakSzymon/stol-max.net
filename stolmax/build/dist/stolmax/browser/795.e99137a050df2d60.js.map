{"version":3,"file":"795.e99137a050df2d60.js","mappings":"kKAGkE,MAAAA,EAAA,0BAAAC,EAAAC,EAAAC,GAAA,EAAAD,GAIyCE,MAAE,EAC0O,OAAAC,EAAA,MAAAC,EAAA,2BAAAC,EAAAL,EAAAC,GAAA,UAAAK,EAAAN,EAAAC,GA8OyrC,GA9OzrC,EAAAD,GAD5OE,MAAE,EAAAG,EAAA,qBA+Om6C,EAAAL,EAAA,OAAAO,EA/Or6CL,QAAEM,UAAFN,MAAE,mBAAAK,EAAAE,aA+Om5C,CAAC,UAAAC,EAAAV,EAAAC,GAAqC,GAArC,EAAAD,IA/Ot5CE,MAAE,WAAFA,MAAE,EAAAI,EAAA,YAAFJ,SA+O27C,EAAAF,EAAA,OAAAO,EAAAN,EAAAO,UA/O37CN,MAAE,GAAFA,MAAE,OAAAK,EAAAE,aA+Ou2C,CAAC,KAjP/8CE,EAAuB,MAA7B,MAAMA,GAENA,SAAwBC,UAAI,SAAAC,GAAA,WAAAA,GAAyFF,EAAuB,EAC5IA,EAAwBG,UADmFZ,MAAE,CAAAa,KACJJ,EAAuBK,UAAA,mBAAAC,UAAA,SAAAjB,EAAAC,GADnB,GACmB,EAAAD,GADrBE,KAAEJ,EAAA,KAAAE,EAAA,KAAAkB,EAAFhB,MAAEgB,EAAFhB,WAAED,EAAAQ,aAAAS,EAAAC,OAAA,EAAAC,mBAAAjB,EAAAkB,MAAA,EAAAC,KAAA,EAAAC,OAAA,sBAAAC,SAAA,SAAAxB,EAAAC,GAAA,EAAAD,IAAFE,cAAE,EAAAH,EAAA,yBAAFG,OAC0P,EAAAuB,cAAA,IAH/Vd,CAAuB,KAevBe,EAAkB,MAAxB,MAAMA,EACFC,YAAYC,EAAKC,GACbC,KAAKF,IAAMA,EACXE,KAAKD,WAAaA,EAClBC,KAAKC,yBAA2B,IAAIC,MACpCF,KAAKG,QAAU,CAAC,EAChBH,KAAKI,eAAiB,GACtBJ,KAAKK,OAAS,IAAIH,MAClBF,KAAKM,cAAgB,IAAIJ,MACzBF,KAAKO,UAAY,IAAIL,MACrBF,KAAKQ,UAAY,IAAIN,MACrBF,KAAKS,OAAS,IAAIP,MAClBF,KAAKU,QAAU,IAAIR,MACnBF,KAAKW,OAAS,IAAIT,MAClBF,KAAKY,UAAY,IAAIV,MACrBF,KAAKa,UAAY,IAAIX,MACrBF,KAAKc,SAAW,IAAIZ,MACpBF,KAAKe,SAAW,IAAIb,MACpBF,KAAKgB,WAAa,IAAId,MACtBF,KAAKiB,QAAU,IAAIf,MACnBF,KAAKkB,gBAAkB,IAAIhB,MAC3BF,KAAKmB,gBAAkB,IAAIjB,MAC3BF,KAAKoB,oBAAsB,IAAIlB,MAC/BF,KAAKqB,oBAAsB,IAAInB,MAC/BF,KAAKsB,oBAAsB,IAAIpB,MAC/BF,KAAKuB,eAAiB,IAAIrB,MAC1BF,KAAKwB,gBAAkB,IAAItB,MAC3BF,KAAKyB,kBAAoB,IAAIvB,MAC7BF,KAAK0B,iBAAmB,IAAIxB,KAChC,CACAyB,mBACQ,EAACC,MAAkB5B,KAAKD,cAG5BC,KAAK6B,OAAS,IAAIC,OAAO9B,KAAK+B,cAAcC,cAAehC,KAAKG,SAC5DH,KAAKiC,UACLjC,KAAK6B,OAAOK,KAAKlC,KAAKiC,SAASE,qBAEnCnC,KAAKK,OAAO+B,KAAKpC,KAAK6B,QACtB7B,KAAKqC,sBACsBrC,KAAKsC,OAAOC,QAClCC,UAAWC,IACZzC,KAAKF,IAAI4C,gBACTC,WAAW,KACP3C,KAAK4C,uBAAsB,EAC9B,GAEL5C,KAAKF,IAAI4C,gBACb,CACAG,YAAYN,GACR,GAAKvC,KAAK6B,OAGV,IAAIU,EAAQO,mBAAuB,CAC/B,MAAMC,EAAeR,EAAQO,mBAAsBE,aAC/CD,IAAiB/C,KAAK6B,OAAOoB,OAC7BjD,KAAK6B,OAAOqB,GAAGH,EAAY,CAG/BR,EAAQpC,UACRH,KAAK6B,OAAO1B,QAAUoC,EAAQpC,QAAW6C,cAEjD,CACAG,oBACInD,KAAK6B,OACAuB,GAAG,UAAW,IAAIC,KACnBrD,KAAKO,UAAU6B,KAAKiB,GACpBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,UACND,QACH,GAEAD,GAAG,UAAW,IAAIC,KACnBrD,KAAKQ,UAAU4B,KAAKiB,GACpBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,UACND,QACH,GAEAD,GAAG,OAAQ,CAACG,EAAUC,EAAUC,KACjCzD,KAAKC,yBAAyBmC,KAAKmB,GACnCvD,KAAKS,OAAO2B,KAAK,CAACmB,EAAUC,EAAUC,IACtCzD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,OACND,KAAM,CAACE,EAAUC,EAAUC,IAC9B,GAEAL,GAAG,QAAS,IAAIC,KACjBrD,KAAKU,QAAQ0B,KAAKiB,GAClBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,QACND,QACH,GAEAD,GAAG,OAAQ,IAAIC,KAChBrD,KAAKW,OAAOyB,KAAKiB,GACjBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,OACND,QACH,GAEAD,GAAG,UAAW,IAAIC,KACnBrD,KAAKY,UAAUwB,KAAKiB,GACpBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,UACND,QACH,GAEAD,GAAG,UAAW,IAAIC,KACnBrD,KAAKa,UAAUuB,KAAKiB,GACpBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,UACND,QACH,GAEAD,GAAG,SAAU,IAAIC,KAClBrD,KAAKc,SAASsB,KAAKiB,GACnBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,SACND,QACH,GAEAD,GAAG,SAAU,IAAIC,KAClBrD,KAAKe,SAASqB,KAAKiB,GACnBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,SACND,QACH,GAEAD,GAAG,WAAY,IAAIC,KACpBrD,KAAKgB,WAAWoB,KAAKiB,GACrBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,WACND,QACH,GAEAD,GAAG,QAAS,IAAIC,KACjBrD,KAAKiB,QAAQmB,KAAKiB,GAClBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,QACND,QACH,GAEAD,GAAG,iBAAkB,IAAIC,KAC1BrD,KAAKkB,gBAAgBkB,KAAKiB,GAC1BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,iBACND,QACH,GAEAD,GAAG,iBAAkB,IAAIC,KAC1BrD,KAAKmB,gBAAgBiB,KAAKiB,GAC1BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,iBACND,QACH,GAEAD,GAAG,qBAAsB,IAAIC,KAC9BrD,KAAKoB,oBAAoBgB,KAAKiB,GAC9BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,qBACND,QACH,GAEAD,GAAG,qBAAsB,IAAIC,KAC9BrD,KAAKqB,oBAAoBe,KAAKiB,GAC9BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,qBACND,QACH,GAEAD,GAAG,qBAAsB,IAAIC,KAC9BrD,KAAKsB,oBAAoBc,KAAKiB,GAC9BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,qBACND,QACH,GAEAD,GAAG,gBAAiB,IAAIC,KACzBrD,KAAKuB,eAAea,KAAKiB,GACzBrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,gBACND,QACH,GAEAD,GAAG,iBAAkB,IAAIC,KAC1BrD,KAAKwB,gBAAgBY,KAAKiB,GAC1BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,iBACND,QACH,GAEAD,GAAG,mBAAoB,IAAIC,KAC5BrD,KAAKyB,kBAAkBW,KAAKiB,GAC5BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,mBACND,QACH,GAEAD,GAAG,kBAAmB,IAAIC,KAC3BrD,KAAK0B,iBAAiBU,KAAKiB,GAC3BrD,KAAKM,cAAc8B,KAAK,CACpBkB,KAAM,kBACND,QACH,EAET,CACAlB,oBACI,OAAOnC,KAAK6B,MAChB,CACAQ,sBACIrC,KAAK6B,OAAO6B,QACZ1D,KAAKmD,mBACT,CACAP,wBACIe,QAAQC,IAAI,yBACZ5D,KAAK6B,OAAOgC,UACZ7D,KAAKqC,qBACT,CACAyB,cACQ9D,KAAK6B,QACL7B,KAAK6B,OAAOgC,SAAQ,EAE5B,EAEJjE,SAAmBd,UAAI,SAAAC,GAAA,WAAAA,GAAyFa,GA9OLxB,MA8OyCA,OA9OzCA,MA8O0E2F,OAAW,EAChMnE,EAAmBZ,UA/OwFZ,MAAE,CAAAa,KA+OTW,EAAkBV,UAAA,aAAA8E,eAAA,SAAA9F,EAAAC,EAAA8F,GAAq6B,GAAr6B,EAAA/F,GA/OXE,MAAE6F,EA+Ou5BpF,EAAuB,KAAAX,EAAA,KAAAkB,EA/Oh7BhB,MAAEgB,EAAFhB,WAAED,EAAAmE,OAAAlD,GAAA,EAAAD,UAAA,SAAAjB,EAAAC,GAAA,KAAAD,GAAFE,KAAEE,EAAA,KAAAJ,EAAA,KAAAkB,EAAFhB,MAAEgB,EAAFhB,WAAED,EAAA4D,cAAA3C,EAAAC,OAAA,EAAA6E,OAAA,CAAApB,mBAAA,qBAAA3C,QAAA,UAAAC,eAAA,iBAAA6B,SAAA,YAAAkC,QAAA,CAAAlE,yBAAA,2BAAAI,OAAA,SAAAC,cAAA,gBAAAC,UAAA,YAAAC,UAAA,YAAAC,OAAA,SAAAC,QAAA,UAAAC,OAAA,SAAAC,UAAA,YAAAC,UAAA,YAAAC,SAAA,WAAAC,SAAA,WAAAC,WAAA,aAAAC,QAAA,UAAAC,gBAAA,kBAAAC,gBAAA,kBAAAC,oBAAA,sBAAAC,oBAAA,sBAAAC,oBAAA,sBAAAC,eAAA,iBAAAC,gBAAA,kBAAAC,kBAAA,oBAAAC,iBAAA,oBAAA0C,SAAA,CAAFhG,OAAEmB,MAAA,EAAAC,KAAA,EAAAC,OAAA,2LAAAC,SAAA,SAAAxB,EAAAC,GAAA,EAAAD,IAAFE,MAAE,YAAFA,CA+OqpC,UA/OrpCA,CA+OqpC,WA/OrpCA,MAAE,EAAAQ,EAAA,aAAFR,aA+O68C,EAAAF,IA/O78CE,MAAE,UAAAD,EAAAiC,gBAAFhC,MAAE,GAAFA,MAAE,UAAAD,EAAAmE,QA+O0yC,EAAA+B,aAAA,CAAqNC,KAA2EA,KAA0GA,KAAiFA,MAAmB3E,cAAA,EAAA4E,gBAAA,IAlO/3D3E,CAAkB,KA2SlB4E,EAAe,MAArB,MAAMA,GAENA,SAAgB1F,UAAI,SAAAC,GAAA,WAAAA,GAAyFyF,EAAe,EAC5HA,EAAgBC,UA3T2FrG,MAAE,CAAAa,KA2TCuF,IAC9GA,EAAgBE,UA5T2FtG,MAAE,CAAAuG,QAAA,CA4T4B,CAACC,SAJpIJ,CAAe,sBCnTRK,EAAkB,MAP/B,MAOaA,YAAkB,mBAAA9F,iBAAlB8F,EAAkB,EAAlBA,EAAkB,UAAAC,EAAAC,IAAA,MAAlBF,EAAkB3F,UAAA,yBAAA8F,YAAA,EAAAZ,SAAA,CAAAhG,OAAAmB,MAAA,GAAAC,KAAA,EAAAC,OAAA,y5CAAAC,SAAA,SAAAxB,EAAAC,GAAA,EAAAD,ICZ/BE,MAAA,cAAAA,CAAsD,WAElDA,MAAA,WAEFA,QACAA,MAAA,UAAAA,CAA0B,UAA1BA,CAA0B,UAGOA,MAAA,cAAQA,QACrCA,MAAA,UAAkEA,MAAA,YAAMA,YAG5EA,MAAA,UAAAA,CAA0B,YAEtBA,MAAA,YAEFA,QACAA,MAAA,WAAAA,CAAmE,WAE/DA,MAAA,8TAEyBA,MAAA,WACPA,MAAA,2CAAoCA,QACtDA,MAAA,QAAAA,CAAI,SACJA,MAAA,kgBAIAA,MAAA,QAAAA,CAAI,SACJA,MAAA,qTAGFA,YAGJA,MAAA,WAAAA,CAA0B,WAA1BA,CAA0B,WAGpBA,MAAA,ifAKAA,MAAA,QAAAA,CAAI,SACAA,MAAA,q0BAQNA,UAEFA,MAAA,WAAAA,CAA6B,eAA7BA,CAA6B,sBAGvBA,MAAA,aAEFA,QACAA,MAAA,sBACEA,MAAA,aAEFA,QACAA,MAAA,sBACEA,MAAA,aAEFA,gBAMRA,MAAA,iCD/DYwG,KAAcJ,EAAeF,IAAEW,KAAeC,OAAA,gbAE7CL,CAAkB","names":["_c0","NgxSplideSlideComponent_ng_template_0_Template","rf","ctx","i0","_c1","_c2","NgxSplideComponent_div_4_1_ng_template_0_Template","NgxSplideComponent_div_4_1_Template","slide_r2","$implicit","slideContent","NgxSplideComponent_div_4_Template","NgxSplideSlideComponent","ɵfac","t","ɵcmp","type","selectors","viewQuery","_t","first","ngContentSelectors","decls","vars","consts","template","encapsulation","NgxSplideComponent","constructor","cdr","platformId","this","selectedSlideIndexChange","EventEmitter","options","containerClass","onInit","onSplideEvent","onMounted","onUpdated","onMove","onMoved","onDrag","onDragged","onVisible","onHidden","onActive","onInactive","onClick","onArrowsMounted","onArrowsUpdated","onPaginationMounted","onPaginationUpdated","onNavigationMounted","onAutoplayPlay","onAutoplayPause","onAutoplayPlaying","onLazyloadLoaded","ngAfterViewInit","isPlatformBrowser","splide","Splide","splideElement","nativeElement","syncWith","sync","getSplideInstance","emit","mountSplideInstance","slides","changes","subscribe","list","detectChanges","setTimeout","remountSplideInstance","ngOnChanges","selectedSlideIndex","currentIndex","currentValue","index","go","addEventListeners","on","args","name","newIndex","oldIndex","destIndex","mount","console","log","destroy","ngOnDestroy","PLATFORM_ID","contentQueries","dirIndex","inputs","outputs","features","dependencies","i1","changeDetection","NgxSplideModule","ɵmod","ɵinj","imports","CommonModule","AboutPageComponent","core","Xpm","standalone","FooterComponent","styles"],"sourceRoot":"webpack:///","sources":["./node_modules/ngx-splide/fesm2015/ngx-splide.js","./src/app/about-page/about-page.component.ts","./src/app/about-page/about-page.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewChild, EventEmitter, PLATFORM_ID, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\n\nclass NgxSplideSlideComponent {\n}\nNgxSplideSlideComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideSlideComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxSplideSlideComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxSplideSlideComponent, selector: \"splide-slide\", viewQueries: [{ propertyName: \"slideContent\", first: true, predicate: [\"slideContent\"], descendants: true }], ngImport: i0, template: '<ng-template #slideContent><ng-content></ng-content></ng-template>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideSlideComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'splide-slide',\n                    template: '<ng-template #slideContent><ng-content></ng-content></ng-template>'\n                }]\n        }], propDecorators: { slideContent: [{\n                type: ViewChild,\n                args: ['slideContent']\n            }] } });\n\nclass NgxSplideComponent {\n    constructor(cdr, platformId) {\n        this.cdr = cdr;\n        this.platformId = platformId;\n        this.selectedSlideIndexChange = new EventEmitter();\n        this.options = {};\n        this.containerClass = '';\n        this.onInit = new EventEmitter();\n        this.onSplideEvent = new EventEmitter();\n        this.onMounted = new EventEmitter();\n        this.onUpdated = new EventEmitter();\n        this.onMove = new EventEmitter();\n        this.onMoved = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragged = new EventEmitter();\n        this.onVisible = new EventEmitter();\n        this.onHidden = new EventEmitter();\n        this.onActive = new EventEmitter();\n        this.onInactive = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onArrowsMounted = new EventEmitter();\n        this.onArrowsUpdated = new EventEmitter();\n        this.onPaginationMounted = new EventEmitter();\n        this.onPaginationUpdated = new EventEmitter();\n        this.onNavigationMounted = new EventEmitter();\n        this.onAutoplayPlay = new EventEmitter();\n        this.onAutoplayPause = new EventEmitter();\n        this.onAutoplayPlaying = new EventEmitter();\n        this.onLazyloadLoaded = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        this.splide = new Splide(this.splideElement.nativeElement, this.options);\n        if (this.syncWith) {\n            this.splide.sync(this.syncWith.getSplideInstance());\n        }\n        this.onInit.emit(this.splide);\n        this.mountSplideInstance();\n        const slidesSubscription = this.slides.changes\n            .subscribe((list) => {\n            this.cdr.detectChanges();\n            setTimeout(() => {\n                this.remountSplideInstance();\n            });\n        });\n        this.cdr.detectChanges();\n    }\n    ngOnChanges(changes) {\n        if (!this.splide) {\n            return;\n        }\n        if (changes['selectedSlideIndex']) {\n            const currentIndex = changes['selectedSlideIndex'].currentValue;\n            if (currentIndex !== this.splide.index) {\n                this.splide.go(currentIndex);\n            }\n        }\n        if (changes['options']) {\n            this.splide.options = changes['options'].currentValue;\n        }\n    }\n    addEventListeners() {\n        this.splide\n            .on('mounted', (...args) => {\n            this.onMounted.emit(args);\n            this.onSplideEvent.emit({\n                name: 'mounted',\n                args\n            });\n        })\n            .on('updated', (...args) => {\n            this.onUpdated.emit(args);\n            this.onSplideEvent.emit({\n                name: 'updated',\n                args\n            });\n        })\n            .on('move', (newIndex, oldIndex, destIndex) => {\n            this.selectedSlideIndexChange.emit(newIndex);\n            this.onMove.emit([newIndex, oldIndex, destIndex]);\n            this.onSplideEvent.emit({\n                name: 'move',\n                args: [newIndex, oldIndex, destIndex]\n            });\n        })\n            .on('moved', (...args) => {\n            this.onMoved.emit(args);\n            this.onSplideEvent.emit({\n                name: 'moved',\n                args\n            });\n        })\n            .on('drag', (...args) => {\n            this.onDrag.emit(args);\n            this.onSplideEvent.emit({\n                name: 'drag',\n                args\n            });\n        })\n            .on('dragged', (...args) => {\n            this.onDragged.emit(args);\n            this.onSplideEvent.emit({\n                name: 'dragged',\n                args\n            });\n        })\n            .on('visible', (...args) => {\n            this.onVisible.emit(args);\n            this.onSplideEvent.emit({\n                name: 'visible',\n                args\n            });\n        })\n            .on('hidden', (...args) => {\n            this.onHidden.emit(args);\n            this.onSplideEvent.emit({\n                name: 'hidden',\n                args\n            });\n        })\n            .on('active', (...args) => {\n            this.onActive.emit(args);\n            this.onSplideEvent.emit({\n                name: 'active',\n                args\n            });\n        })\n            .on('inactive', (...args) => {\n            this.onInactive.emit(args);\n            this.onSplideEvent.emit({\n                name: 'inactive',\n                args\n            });\n        })\n            .on('click', (...args) => {\n            this.onClick.emit(args);\n            this.onSplideEvent.emit({\n                name: 'click',\n                args\n            });\n        })\n            .on('arrows:mounted', (...args) => {\n            this.onArrowsMounted.emit(args);\n            this.onSplideEvent.emit({\n                name: 'arrows:mounted',\n                args\n            });\n        })\n            .on('arrows:updated', (...args) => {\n            this.onArrowsUpdated.emit(args);\n            this.onSplideEvent.emit({\n                name: 'arrows:updated',\n                args\n            });\n        })\n            .on('pagination:mounted', (...args) => {\n            this.onPaginationMounted.emit(args);\n            this.onSplideEvent.emit({\n                name: 'pagination:mounted',\n                args\n            });\n        })\n            .on('pagination:updated', (...args) => {\n            this.onPaginationUpdated.emit(args);\n            this.onSplideEvent.emit({\n                name: 'pagination:updated',\n                args\n            });\n        })\n            .on('navigation:mounted', (...args) => {\n            this.onNavigationMounted.emit(args);\n            this.onSplideEvent.emit({\n                name: 'navigation:mounted',\n                args\n            });\n        })\n            .on('autoplay:play', (...args) => {\n            this.onAutoplayPlay.emit(args);\n            this.onSplideEvent.emit({\n                name: 'autoplay:play',\n                args\n            });\n        })\n            .on('autoplay:pause', (...args) => {\n            this.onAutoplayPause.emit(args);\n            this.onSplideEvent.emit({\n                name: 'autoplay:pause',\n                args\n            });\n        })\n            .on('autoplay:playing', (...args) => {\n            this.onAutoplayPlaying.emit(args);\n            this.onSplideEvent.emit({\n                name: 'autoplay:playing',\n                args\n            });\n        })\n            .on('lazyload:loaded', (...args) => {\n            this.onLazyloadLoaded.emit(args);\n            this.onSplideEvent.emit({\n                name: 'lazyload:loaded',\n                args\n            });\n        });\n    }\n    getSplideInstance() {\n        return this.splide;\n    }\n    mountSplideInstance() {\n        this.splide.mount();\n        this.addEventListeners();\n    }\n    remountSplideInstance() {\n        console.log('remountSplideInstance');\n        this.splide.destroy();\n        this.mountSplideInstance();\n    }\n    ngOnDestroy() {\n        if (this.splide) {\n            this.splide.destroy(true);\n        }\n    }\n}\nNgxSplideComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nNgxSplideComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxSplideComponent, selector: \"splide\", inputs: { selectedSlideIndex: \"selectedSlideIndex\", options: \"options\", containerClass: \"containerClass\", syncWith: \"syncWith\" }, outputs: { selectedSlideIndexChange: \"selectedSlideIndexChange\", onInit: \"onInit\", onSplideEvent: \"onSplideEvent\", onMounted: \"onMounted\", onUpdated: \"onUpdated\", onMove: \"onMove\", onMoved: \"onMoved\", onDrag: \"onDrag\", onDragged: \"onDragged\", onVisible: \"onVisible\", onHidden: \"onHidden\", onActive: \"onActive\", onInactive: \"onInactive\", onClick: \"onClick\", onArrowsMounted: \"onArrowsMounted\", onArrowsUpdated: \"onArrowsUpdated\", onPaginationMounted: \"onPaginationMounted\", onPaginationUpdated: \"onPaginationUpdated\", onNavigationMounted: \"onNavigationMounted\", onAutoplayPlay: \"onAutoplayPlay\", onAutoplayPause: \"onAutoplayPause\", onAutoplayPlaying: \"onAutoplayPlaying\", onLazyloadLoaded: \"onLazyloadLoaded\" }, queries: [{ propertyName: \"slides\", predicate: NgxSplideSlideComponent }], viewQueries: [{ propertyName: \"splideElement\", first: true, predicate: [\"splideElement\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div #splideElement class=\\\"splide\\\" [ngClass]=\\\"containerClass\\\">\\r\\n    <div class=\\\"splide__track\\\">\\r\\n        <div class=\\\"splide__list\\\">\\r\\n            <div class=\\\"splide__slide\\\" *ngFor=\\\"let slide of slides;\\\">\\r\\n                <ng-template *ngIf=\\\"slide.slideContent\\\" [ngTemplateOutlet]=\\\"slide.slideContent\\\"></ng-template>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'splide',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    templateUrl: './ngx-splide.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { selectedSlideIndex: [{\n                type: Input\n            }], selectedSlideIndexChange: [{\n                type: Output\n            }], options: [{\n                type: Input\n            }], containerClass: [{\n                type: Input\n            }], syncWith: [{\n                type: Input\n            }], onInit: [{\n                type: Output\n            }], onSplideEvent: [{\n                type: Output\n            }], onMounted: [{\n                type: Output\n            }], onUpdated: [{\n                type: Output\n            }], onMove: [{\n                type: Output\n            }], onMoved: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onDragged: [{\n                type: Output\n            }], onVisible: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], onActive: [{\n                type: Output\n            }], onInactive: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onArrowsMounted: [{\n                type: Output\n            }], onArrowsUpdated: [{\n                type: Output\n            }], onPaginationMounted: [{\n                type: Output\n            }], onPaginationUpdated: [{\n                type: Output\n            }], onNavigationMounted: [{\n                type: Output\n            }], onAutoplayPlay: [{\n                type: Output\n            }], onAutoplayPause: [{\n                type: Output\n            }], onAutoplayPlaying: [{\n                type: Output\n            }], onLazyloadLoaded: [{\n                type: Output\n            }], slides: [{\n                type: ContentChildren,\n                args: [NgxSplideSlideComponent]\n            }], splideElement: [{\n                type: ViewChild,\n                args: ['splideElement']\n            }] } });\n\nclass NgxSplideModule {\n}\nNgxSplideModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxSplideModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideModule, declarations: [NgxSplideComponent, NgxSplideSlideComponent], imports: [CommonModule], exports: [NgxSplideComponent, NgxSplideSlideComponent] });\nNgxSplideModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxSplideModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSplideComponent, NgxSplideSlideComponent],\n                    imports: [CommonModule],\n                    exports: [NgxSplideComponent, NgxSplideSlideComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-splide\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxSplideComponent, NgxSplideModule, NgxSplideSlideComponent };\n","import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { NgxSplideModule } from 'ngx-splide';\nimport { FooterComponent } from '../footer/footer.component';\n\n@Component({\n  selector: 'stolmax-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss'],\n  standalone: true,\n  imports: [CommonModule, NgxSplideModule, FooterComponent]\n})\nexport class AboutPageComponent {\n\n}\n","<section class=\"d-flex p-5 flex-column w-100 paralax\">\n  <div class=\"d-flex w-100 justify-content-center align-items-center mb-1\">\n    <img src=\"/assets/break.webp\" width=\"50px\"\n      alt=\"zielony szeroki cienki prostokąt, element jest przerywnikiem na stronie\">\n  </div>\n  <div class=\"d-flex w-100\">\n    <div class=\"d-flex w-100 justify-content-center align-items-center mb-5\"\n      style=\"display:flex; align-items: center; justify-content: center; font-size:32px;\">\n      <h3 style=\"font-size: 32px;\">O NASZEJ</h3>\n      <h3 style=\"margin-left: 0.7rem; font-size: 32px; color: #68bd45;\">FIRMIE</h3>\n    </div>\n  </div>\n  <div class=\"d-flex w-100\">\n    <div class=\"d-flex w-50 p-3\">\n      <img src=\"/assets/patrycjusz-stolmax.jpeg\" class=\"w-100\"\n        alt=\"Zdjęcie Pana Patrcjusza Wybrańca w jego warsztacie podczas pracy, założyciela i stolarza firmy stol-max. Stolarz tnie drewniane płyty na wielkim okrągłym ostrzu na maszynie do tego przeznaczonej.\">\n    </div>\n    <div class=\"d-flex w-50 justify-content-center align-items-center\">\n      <p class=\"Description\">\n        Patrycjusz Wybraniec z firmy Stol-Max Meble na wymiar www.stol-max.net zajmuję się stolarstwem od ćwierć wieku.\n        Znajduję się w naszej Tyskiej Bazie Rzemieślników, internetowej bazie zakładów z tradycją! Pełną bazę\n        znajdziecie na stronie ➡ <a href=\"https://umtychy.pl/tyscyrzemieslnicy\"\n          traget=\"_blank\">https://umtychy.pl/tyscyrzemieslnicy</a>\n        <br><br>\n        Choć szkołę ukończył w zupełnie innym kierunku, to jego obecny fach ma we krwi. – Od kiedy byłem dzieckiem, w\n        rodzinie zawsze ktoś zajmował się „stolarką”. Czy to dziadek, czy wujek, a potem ja sam zacząłem pracować w\n        firmie zajmującej się produkcją mebli. Po kilku latach postanowiłem pójść na swoje i założyłem własną firmę –\n        wspomina pan Patrycjusz.\n        <br><br>\n        Aktualnie wraz dwoma pracownikami zajmuje się produkcją mebli. – Wykonujemy meble pod wymiar. Do kuchni,\n        łazienek, meble pokojowe. Wszystko, na co tylko klient ma ochotę – zapewnia. Firma STOL-MAX znajduje się przy\n        „Sublach”, na ulicy Chałupniczej 3.\n      </p>\n    </div>\n  </div>\n  <div class=\"d-flex w-100\">\n    <div class=\"d-flex w-50 justify-content-center align-items-center\">\n      <p class=\"Description\">\n        STOL-MAX jest firmą z wieloletnim doświadczeniem, cechującą się zaufaniem i zadowoleniem klientów. Zajmujemy się\n        produkcją\n        mebli na wymiar dla klientów indywidualnych, jak i instytucji oraz firm. Jeśli szukasz partnera, który jest w\n        stanie dopasować meble do twoich pomieszczeń, a na dodatek potrafiącego zrobić to dobrze i sprawnie – postaw\n        na nas, jak zrobiło wielu naszych usatysfakcjonowanych klientów.\n        <br>\n        <br>Nasze produkty charakteryzują się różnorodnością stylizacji, w których zawsze uwzględniamy najnowsze trendy\n        w\n        meblarstwie. Nasi pracownicy co dzień dokładają wszelkich starań, by oferta była wszechstronna i uniwersalna,\n        dzięki czemu docieramy do szerokiego grona klientów, ceniących sobie funkcjonalność, atrakcyjność, wygodę i\n        ergonomię\n        naszych mebli. Nie musisz nam wierzyć na słowo. Sprawdź naszą stronę na Facebooku albo opinie ludzi, którzy\n        nam zaufali, by przekonać się osobiście, że dbamy o swoich klientów i że zależy nam na tym, by byli zadowoleni\n        z efektu naszej pracy. Pozwól nam dowieść swojego profesjonalizmu i zostań jednym z nich!\n      </p>\n    </div>\n    <div class=\"d-flex w-50 p-3\">\n      <splide class=\"w-100\">\n        <splide-slide class=\"w-100\">\n          <img src=\"/assets/about-1.jpg\" class=\"w-100\"\n            alt=\"krótka szafka łazienkowa rogowa białe fronty i drewniane płyty, 2 szuflady, przy łaczeniu z wanną\" />\n        </splide-slide>\n        <splide-slide class=\"w-100\">\n          <img src=\"/assets/about-2.jpg\" class=\"w-100\"\n            alt=\"długa szafa rogowa z dwoma lustrami, drewniane i białe fronty\" />\n        </splide-slide>\n        <splide-slide class=\"w-100\">\n          <img src=\"/assets/about-3.jpg\" class=\"w-100\"\n            alt=\"kuchnia z białymi frontami oraz marmurowymi blatami, wyspa na środku kuchni\" />\n        </splide-slide>\n      </splide>\n    </div>\n  </div>\n</section>\n\n<app-footer></app-footer>"],"x_google_ignoreList":[0]}