{"version":3,"file":"polyfills.js","mappings":"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","names":["global","globalThis","__symbol__","name","__Zone_symbol_prefix","ObjectGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","ObjectDefineProperty","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","create","ArraySlice","Array","prototype","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","window","internalWindow","undefined","_global","REMOVE_ATTRIBUTE","bindArguments","args","i","length","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","self","isNode","process","toString","call","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","type","target","this","listener","result","errorEvent","message","filename","lineno","colno","error","preventDefault","apply","arguments","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","hasOwnProperty","value","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","patchOnProperties","properties","onProperties","push","j","originalInstanceKey","patchClass","className","OriginalClass","a","Error","attachOriginToPatched","instance","fn","patchMethod","patchFn","proto","delegateName","delegate","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","task","cbIdx","invoke","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","navigator","userAgent","indexOf","passiveSupported","options","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","err","once","globalCallback","context","isCapture","tasks","errors","copyTasks","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","splice","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","signal","aborted","zone","constructorName","constructor","targetSource","scheduleEventTask","cancelTask","unshift","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleId","clearTask","isPeriodic","delay","handle","ref","unref","bind","id","state","cancelFn","runCount","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchPromise","__load_patch","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","symbolPromise","symbolThen","creationTrace","onUnhandledError","e","showUncaughtError","rejection","console","stack","microtaskDrainDone","uncaughtPromiseError","shift","runGuarded","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","queue","trace","currentTask","scheduleResolveOrReject","readableObjectToString","JSON","stringify","scheduleMicroTask","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","noop","AggregateError","resolve","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","count","finished","race","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","zoneify","resultPromise","ctor","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","_redefineProperty","Zone$1","loadZone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","static","assertZonePatched","patches","root","parent","_currentZoneFrame","_currentTask","ignoreDuplicate","perfName","_api","_parent","_name","zoneSpec","_properties","_zoneDelegate","_ZoneDelegate","key","getZoneWith","fork","_callback","intercept","applyThis","applyArgs","handleError","runTask","NO_ZONE","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","ZoneTask","microTask","canceling","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","next","change","_state","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","nativeThen","currentZoneFrame","getGlobalObjects","patchCommon","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options &&\n                    typeof options === 'object' &&\n                    options.signal &&\n                    typeof options.signal === 'object'\n                    ? options.signal\n                    : undefined;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    nativeListener.call(signal, 'abort', () => {\n                        task.zone.cancelTask(task);\n                    }, { once: true });\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (typeof args[0] === 'function') {\n            const options = {\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    if (!options.isPeriodic) {\n                        if (typeof options.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[options.handleId];\n                        }\n                        else if (options.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            options.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const handle = task.data.handleId;\n            if (typeof handle === 'number') {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handle] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n            }\n            // check whether handle is null, because some polyfill or browser\n            // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n            if (handle &&\n                handle.ref &&\n                handle.unref &&\n                typeof handle.ref === 'function' &&\n                typeof handle.unref === 'function') {\n                task.ref = handle.ref.bind(handle);\n                task.unref = handle.unref.bind(handle);\n            }\n            if (typeof handle === 'number' || handle) {\n                return handle;\n            }\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (typeof id === 'number') {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n        }\n        else {\n            // nodejs env.\n            task = id && id[taskSymbol];\n            // other environments.\n            if (!task) {\n                task = id;\n            }\n        }\n        if (task && typeof task.type === 'string') {\n            if (task.state !== 'notScheduled' &&\n                ((task.cancelFn && task.data.isPeriodic) || task.runCount === 0)) {\n                if (typeof id === 'number') {\n                    delete tasksByHandleId[id];\n                }\n                else if (id) {\n                    id[taskSymbol] = null;\n                }\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n"],"x_google_ignoreList":[0]}